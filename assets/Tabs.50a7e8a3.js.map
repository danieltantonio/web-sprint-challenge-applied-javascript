{"version":3,"sources":["components/Tabs.js"],"names":["Topics","topicData","tab","document","createElement","classList","add","textContent","axios","get","then","res","data","topics","forEach","topic","querySelector","appendChild","catch","err","console","log"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,MAAT,CAAgBC,SAAhB,EAA2B;AACvB,MAAMC,GAAG,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAZ;AACAF,EAAAA,GAAG,CAACG,SAAJ,CAAcC,GAAd,CAAkB,KAAlB;AACAJ,EAAAA,GAAG,CAACK,WAAJ,GAAkBN,SAAlB;AAEA,SAAOC,GAAP;AACH;;AAEDM,KAAK,CAACC,GAAN,CAAU,mDAAV,EACGC,IADH,CACQ,UAAAC,GAAG,EAAI;AACTA,EAAAA,GAAG,CAACC,IAAJ,CAASC,MAAT,CAAgBC,OAAhB,CAAwB,UAAAC,KAAK,EAAI;AAC7BZ,IAAAA,QAAQ,CAACa,aAAT,CAAuB,SAAvB,EAAkCC,WAAlC,CAA8CjB,MAAM,CAACe,KAAD,CAApD;AACH,GAFD;AAGH,CALH,EAKKG,KALL,CAKW,UAAAC,GAAG,EAAI;AACZC,EAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,CAPH","file":"Tabs.50a7e8a3.js","sourceRoot":"..","sourcesContent":["// STEP 2: Create tabs\r\n// -----------------------\r\n// Using axios send a GET request to the address: https://lambda-times-backend.herokuapp.com/topics\r\n// Once the data is resolved use console logs or breakpoints to review the structure.\r\n// Iterate over the topics creating a new tab for each topic, and appending it to the DOM\r\n// under the div.topics element.\r\n//\r\n//  Each tab should look like this:\r\n//    <div class=\"tab\">topic here</div>\r\n//\r\n// NOTE: you do _not_ need to install axios as it's included in the HTML via script element\r\n\r\nfunction Topics(topicData) {\r\n    const tab = document.createElement('div');\r\n    tab.classList.add('tab');\r\n    tab.textContent = topicData;\r\n\r\n    return tab;\r\n}\r\n\r\naxios.get('https://lambda-times-backend.herokuapp.com/topics')\r\n  .then(res => {\r\n      res.data.topics.forEach(topic => {\r\n          document.querySelector('.topics').appendChild(Topics(topic));\r\n      })\r\n  }).catch(err => {\r\n      console.log(err);\r\n  })"]}